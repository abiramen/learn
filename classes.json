{
    "sessions": [{
        "year": 21,
        "term": 2,
        "classes": [
            {
                "course": "COMP1521",
                "class": "fri13a",
                "assist": "Jashank",
                "repo": "https://github.com/abiramen/comp1521-21t2-f13a/blob/main/",
                "weeks": [
                    {
                        "week": 1,
                        "topic": "Revision",
                        "desc": "This week's content doesn't really depend on any of the lectures! We'll be familiarising ourselves again with concepts from COMP1[59]11.",
                        "slides": "2PACX-1vTNnvgpc9at_C6mMSMooxMJLkYiSzk5tIIPtIyK1IEIYWSe8_aw4K6lkq0CVD17L_XFfJD9Fqa53iyS",
                        "text": "Welcome!",
                        "files" : [
                            {
                                "name": "for_loops.c",
                                "desc": "An intro to for loops, which are really just spicy while loops."
                            }, 
                            {
                                "name": "static.c",
                                "desc": "A demo of the static keyword on variables inside functions."
                            },
                            {
                                "name": "struct.c",
                                "desc": "A refresher on how to use structs in C."
                            },
                            {
                                "name": "args.c",
                                "desc": "A refresher on reading in input from command line arguments."
                            },
                            {
                                "name": "recursion.c",
                                "desc": "An example using recursion to print an array."
                            },
                            {
                                "name": "bad_strings.c",
                                "desc": "A demo of an error when initialisng strings. Why does this happen?"
                            },
                            {
                                "name": "literals.c",
                                "desc": "Hardcoded strings behave slightly differently in C."
                            }
                        ],
                        "links": [
                            {
                                "name": "All code is also in a GitHub repo, if you'd prefer that instead.",
                                "link": "https://github.com/abiramen/comp1521-21t2-f13a"
                            }
                        ]
                    },
                    {
                        "week": 2,
                        "topic": "Bitwise operations and numeric conversions",
                        "desc": "This week focuses on bitwise operations, and converting numbers to binary and hexadecimal!",
                        "slides": "2PACX-1vQPnkSAvdgEJBI798wIb1GQo3V9zToRpjY4IgyxeyjpGWgkk8nQjdVKUbU4tfSWJxgBU8Uw_2Q3F8U7",
                        "files" : []
                    },
                    {
                        "week": 3,
                        "topic": "Two's complement and floating point numbers",
                        "desc": "This week's lab heavily involve manipulating bits of floating point numbers.",
                        "slides": "2PACX-1vRtJ_tIrB70w4EXETRxzo-G0FOkwZlv2qHPx3CPciHgsYDdCqVOdk8sMXiDtj2XSgbqMxyzAkRPqo1M",
                        "files" : []
                    },
                    {
                        "week": 4,
                        "topic": "MIPS basics",
                        "desc": "We get started with MIPS - labs include printing, if statements and for loops.",
                        "files" : [
                            {
                                "name": "square.c",
                                "desc": "Print a square number in C."
                            }, 
                            {
                                "name": "square.s",
                                "desc": "Print a square number in MIPS."
                            }, 
                            {
                                "name": "square_max.c",
                                "desc": "Print a square number in C, with a limit to prevent overflows."
                            }, 
                            {
                                "name": "square_max.s",
                                "desc": "Print a square number in MIPS, with a limit to prevent overflows."
                            }
                        ]
                    },
                    {
                        "week": 5,
                        "topic": "MIPS data, arrays and functions",
                        "desc": "This week's a chonky one - we look at two weeks of content, preparing for the first assignment, snake.",
                        "files" : [
                            {
                                "name": "variables.c",
                                "desc": "Some C variables we want to represent as MIPS data."
                            },
                            {
                                "name": "variables.s",
                                "desc": "Our variables, now in ✨ MIPS ✨."
                            },
                            {
                                "name": "do_while.c",
                                "desc": "The all new do-while loop - a slightly cooler while loop."
                            },
                            {
                                "name": "do_while.s",
                                "desc": "The do-while loop, but in MIPS."
                            },
                            {
                                "name": "scan_and_print.c",
                                "desc": "Scanning 5 numbers into an array, and then printing them."
                            },
                            {
                                "name": "scan_and_print.s",
                                "desc": "Scanning 5 numbers into an array, and then printing them, but in MIPS!"
                            },
                            {
                                "name": "fib.c",
                                "desc": "A simple fibonacci implementation (without memoization) in C."
                            },
                            {
                                "name": "fib.simple.c",
                                "desc": "A fibonacci implementation made simpler to translate!"
                            },
                            {
                                "name": "fib.s",
                                "desc": "Our simple fibonacci implementation, made slightly less simple by being implemented in MIPS."
                            } 
                        ]
                    }
                ]
            }
        ]
    }]
}
